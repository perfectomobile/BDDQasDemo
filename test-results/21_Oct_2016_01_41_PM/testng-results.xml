<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="2" passed="1">
  <reporter-output>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>Given I open browser to webpage "http://amtrak.com"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "train.status"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "find.Station"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "Station.abl"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I enter "45" to "bus.number"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "status.button"</div></div>]]>
    </line>
    <line>
      <![CDATA[<div style="display:block;margin-left:10px;"></div>]]>
    </line>
  </reporter-output>
  <suite name="QAF-Gherkin-Demo" duration-ms="53104" started-at="2016-10-21T17:41:56Z" finished-at="2016-10-21T17:42:49Z">
    <groups>
      <group name="@amtrak">
        <method signature="scenarios.Amtrak.feature.amtrak - buy ticket()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" name="amtrak - buy ticket" class="com.qmetry.qaf.automation.step.client.Scenario"/>
        <method signature="scenarios.Amtrak.feature.amtrak - find station()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" name="amtrak - find station" class="com.qmetry.qaf.automation.step.client.Scenario"/>
      </group> <!-- @amtrak -->
    </groups>
    <test name="GherkinTest" duration-ms="53104" started-at="2016-10-21T17:41:56Z" finished-at="2016-10-21T17:42:49Z">
      <class name="com.qmetry.qaf.automation.step.client.Scenario">
        <test-method status="PASS" signature="setupSuit(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="setupSuit" is-config="true" duration-ms="15" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSuit -->
        <test-method status="PASS" signature="setupTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="setupTest" is-config="true" duration-ms="1" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTest -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="setup" is-config="true" duration-ms="3" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - buy ticket" name="setup" is-config="true" duration-ms="3" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="setupMethod" is-config="true" duration-ms="1" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="PASS" signature="amtrak - find station()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8]" test-instance-name="amtrak - find station" name="amtrak - find station" duration-ms="23769" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:42:19Z">
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>Given I open browser to webpage "http://amtrak.com"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "train.status"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "find.Station"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "Station.abl"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I enter "45" to "bus.number"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "status.button"</div></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- amtrak - find station -->
        <test-method status="PASS" signature="setupMethod(java.lang.reflect.Method, org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - buy ticket" name="setupMethod" is-config="true" duration-ms="1" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qmetry.qaf.automation.step.client.Scenario.scenario()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method status="SKIP" signature="amtrak - buy ticket()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - buy ticket" name="amtrak - buy ticket" duration-ms="53074" started-at="2016-10-21T13:41:56Z" finished-at="2016-10-21T13:42:49Z">
          <exception class="com.qmetry.qaf.automation.core.AutomationError">
            <message>
              <![CDATA[Timed out after 50 seconds: Unable to create driver instance in 6th attempt with retry timeout of 50 seconds. You can check/set value of 'driver.init.retry.timeout' appropriately to set retry timeout on driver initialization failure.
Failed to execute command handset open: Cannot open device F15118A63C51D54E3CEA474B32CFE2ECDAF1AB70 for user uzie@perfectomobile.com, device is in use.
Command duration or timeout: 348 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'UziMac.local', ip: '172.21.31.20', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.1', java.version: '1.8.0_45'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qmetry.qaf.automation.core.AutomationError: Timed out after 50 seconds: Unable to create driver instance in 6th attempt with retry timeout of 50 seconds. You can check/set value of 'driver.init.retry.timeout' appropriately to set retry timeout on driver initialization failure.
Failed to execute command handset open: Cannot open device F15118A63C51D54E3CEA474B32CFE2ECDAF1AB70 for user uzie@perfectomobile.com, device is in use.
Command duration or timeout: 348 milliseconds
Build info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'
System info: host: 'UziMac.local', ip: '172.21.31.20', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.11.1', java.version: '1.8.0_45'
Driver info: com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.execute(QAFExtendedWebDriver.java:223)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:158)
	at com.qmetry.qaf.automation.ui.webdriver.QAFExtendedWebDriver.<init>(QAFExtendedWebDriver.java:93)
	at com.qmetry.qaf.automation.ui.UiDriverFactory$Browsers.getDriver(UiDriverFactory.java:461)
	at com.qmetry.qaf.automation.ui.UiDriverFactory$Browsers.access$3(UiDriverFactory.java:440)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.getDriver(UiDriverFactory.java:251)
	at com.qmetry.qaf.automation.ui.UiDriverFactory.get(UiDriverFactory.java:101)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:489)
	at com.qmetry.qaf.automation.core.QAFTestBase$DriverInitExpectedCondition.apply(QAFTestBase.java:1)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at com.qmetry.qaf.automation.core.QAFTestBase.init(QAFTestBase.java:391)
	at com.qmetry.qaf.automation.core.QAFTestBase.getUiDriver(QAFTestBase.java:178)
	at com.qmetry.qaf.automation.ui.WebDriverTestBase.getDriver(WebDriverTestBase.java:47)
	at com.qmetry.qaf.automation.support.perfecto.PerfectoReportiumConnector.getReportiumClient(Unknown Source)
	at com.qmetry.qaf.automation.support.perfecto.PerfectoReportiumConnector.onTestStart(Unknown Source)
	at org.testng.internal.Invoker.runTestListeners(Invoker.java:1700)
	at org.testng.internal.Invoker.runTestListeners(Invoker.java:1675)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:619)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- com.qmetry.qaf.automation.core.AutomationError -->
          <reporter-output>
            <line>
              <![CDATA[<div style="display:block;margin-left:10px;"></div>]]>
            </line>
          </reporter-output>
        </test-method> <!-- amtrak - buy ticket -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-21T13:42:19Z" finished-at="2016-10-21T13:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=amtrak - find station status=SUCCESS method=scenarios.Amtrak.feature.amtrak - find station()[pri:1000, instance:com.qmetry.qaf.automation.step.client.Scenario@3e8] output=<div style="display:block;margin-left:10px;"><div  class="teststeppass"><span class="teststeppass-label">T </span>Given I open browser to webpage "http://amtrak.com"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "train.status"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "find.Station"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "Station.abl"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I enter "45" to "bus.number"</div><div  class="teststeppass"><span class="teststeppass-label">T </span>Then I click on "status.button"</div></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="afterClass" is-config="true" duration-ms="1" started-at="2016-10-21T13:42:19Z" finished-at="2016-10-21T13:42:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterClass(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - buy ticket" name="afterClass" is-config="true" duration-ms="0" started-at="2016-10-21T13:42:49Z" finished-at="2016-10-21T13:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestContext, org.testng.ITestResult)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - buy ticket" name="afterMethod" is-config="true" duration-ms="0" started-at="2016-10-21T13:42:49Z" finished-at="2016-10-21T13:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=amtrak - buy ticket status=SKIP method=scenarios.Amtrak.feature.amtrak - buy ticket()[pri:1001, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9] output=<div style="display:block;margin-left:10px;"></div>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest(org.testng.ITestContext)[pri:0, instance:com.qmetry.qaf.automation.step.client.Scenario@3e9]" test-instance-name="amtrak - find station" name="afterTest" is-config="true" duration-ms="0" started-at="2016-10-21T13:42:49Z" finished-at="2016-10-21T13:42:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@35083305]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qmetry.qaf.automation.step.client.Scenario -->
    </test> <!-- GherkinTest -->
  </suite> <!-- QAF-Gherkin-Demo -->
</testng-results>
